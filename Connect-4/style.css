*{
  margin: 0; 
  padding:0; 
}

body {
    /*display: flex; /* https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */
    place-items: center; 
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    text-align: center;
    font-weight: 400px;
    font-size: xx-large;
    background-color: whitesmoke

}


#board { /* board is 6 x 7 so each section 
  6x7 = 42 x 90px = 3780/6 = 630 (width)
  3780/7 = 540 (height)*/
    background-color: blue;

    border: 2px solid rgb(15, 20, 118);
    height: 540px;
    width: 630px;

    margin: 0 auto; /*The "margin: 0 auto" property allows the elements within their container to be horizontally centered.*/
    display: flex; 
    flex-wrap: wrap ;/* flex items will wrap onto multiple lines, from top to bottom. By default, flex items will all try to fit onto one line. */
    
}


/*If we set it to 50% it will create a circle. If you set a different width and height we will get an oval instead.
source: https://www.freecodecamp.org/news/css-shapes-explained-how-to-draw-a-circle-triangle-and-more-using-pure-css/#:~:text=To%20create%20a%20circle%20we,will%20get%20an%20oval%20instead.
*/
.cell  { /* add cell class  */
  background-color: white;
  width: 76px; 
  height: 76px;
  margin: 5px;
  border: 2px solid black; /* create a thin border */
  border-radius: 50px; /* as long as the height and width are the same, If the border-radius is set at 50% it will create a circle. */
  display: flex;
}

.cell:hover {
  cursor: grab; 
  background-color: rgb(159, 43, 226);
}


.red {
  background-color: red;
  border: 2px solid black;
}

.yellow {
  background-color: yellow;
  border: 2px solid black;
}

#message {
  text-align: center;
  margin-top: 20px; 
}

#restart {
  display: none; 
  margin: 20px auto; 
  padding: 10px 20px; 
  background-color: blue;
  cursor: pointer;
}

#restart :hover {
  background-color: blueviolet;
}